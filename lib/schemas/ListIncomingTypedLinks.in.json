{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "ConsistencyLevel": {
                    "description": "The consistency level to execute the request at.",
                    "enum": [
                        "SERIALIZABLE",
                        "EVENTUAL"
                    ],
                    "type": "string"
                },
                "FilterAttributeRanges": {
                    "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.",
                    "items": {
                        "description": "Identifies the range of attributes that are used by a specified filter.",
                        "properties": {
                            "AttributeName": {
                                "description": "The unique name of the typed link attribute.",
                                "maxLength": 230,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9._:-]*$",
                                "type": "string"
                            },
                            "Range": {
                                "description": "The range of attribute values that are being selected.",
                                "properties": {
                                    "EndMode": {
                                        "description": "The inclusive or exclusive range end.",
                                        "enum": [
                                            "FIRST",
                                            "LAST",
                                            "LAST_BEFORE_MISSING_VALUES",
                                            "INCLUSIVE",
                                            "EXCLUSIVE"
                                        ],
                                        "type": "string"
                                    },
                                    "EndValue": {
                                        "description": "The attribute value to terminate the range at.",
                                        "properties": {
                                            "BinaryValue": {
                                                "description": "A binary data value.",
                                                "type": "string"
                                            },
                                            "BooleanValue": {
                                                "description": "A Boolean data value.",
                                                "type": "boolean"
                                            },
                                            "DatetimeValue": {
                                                "description": "A date and time value.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "NumberValue": {
                                                "description": "A number data value.",
                                                "type": "string"
                                            },
                                            "StringValue": {
                                                "description": "A string data value.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "StartMode": {
                                        "description": "The inclusive or exclusive range start.",
                                        "enum": [
                                            "FIRST",
                                            "LAST",
                                            "LAST_BEFORE_MISSING_VALUES",
                                            "INCLUSIVE",
                                            "EXCLUSIVE"
                                        ],
                                        "type": "string"
                                    },
                                    "StartValue": {
                                        "description": "The value to start the range at.",
                                        "properties": {
                                            "BinaryValue": {
                                                "description": "A binary data value.",
                                                "type": "string"
                                            },
                                            "BooleanValue": {
                                                "description": "A Boolean data value.",
                                                "type": "boolean"
                                            },
                                            "DatetimeValue": {
                                                "description": "A date and time value.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "NumberValue": {
                                                "description": "A number data value.",
                                                "type": "string"
                                            },
                                            "StringValue": {
                                                "description": "A string data value.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "StartMode",
                                    "EndMode"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "Range"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "FilterTypedLink": {
                    "description": "Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls.",
                    "properties": {
                        "SchemaArn": {
                            "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.",
                            "type": "string"
                        },
                        "TypedLinkName": {
                            "description": "The unique name of the typed link facet.",
                            "pattern": "^[a-zA-Z0-9._-]*$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "SchemaArn",
                        "TypedLinkName"
                    ],
                    "type": "object"
                },
                "MaxResults": {
                    "description": "The maximum number of results to retrieve.",
                    "minimum": 1,
                    "type": "integer"
                },
                "NextToken": {
                    "description": "The pagination token.",
                    "type": "string"
                },
                "ObjectReference": {
                    "description": "Reference that identifies the object whose attributes will be listed.",
                    "properties": {
                        "Selector": {
                            "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An objectâ€™s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "ObjectReference"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}