{
    "type": "object",
    "properties": {
        "MaxResults": {
            "required": false,
            "type": "string"
        },
        "NextToken": {
            "required": false,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "IndexReference": {
                    "description": "The reference to the index to list.",
                    "properties": {
                        "Selector": {
                            "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An objectâ€™s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "MaxResults": {
                    "description": "The maximum number of objects in a single page to retrieve from the index during a request. For more information, see <a href=\"http://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html\">Amazon Cloud Directory Limits</a>.",
                    "minimum": 1,
                    "type": "integer"
                },
                "NextToken": {
                    "description": "The pagination token.",
                    "type": "string"
                },
                "RangesOnIndexedValues": {
                    "description": "Specifies the ranges of indexed values that you want to query.",
                    "items": {
                        "description": "A range of attributes.",
                        "properties": {
                            "AttributeKey": {
                                "description": "The key of the attribute that the attribute range covers.",
                                "properties": {
                                    "FacetName": {
                                        "description": "The name of the facet that the attribute exists within.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9._-]*$",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the attribute.",
                                        "maxLength": 230,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9._:-]*$",
                                        "type": "string"
                                    },
                                    "SchemaArn": {
                                        "description": "The Amazon Resource Name (ARN) of the schema that contains the facet and attribute.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SchemaArn",
                                    "FacetName",
                                    "Name"
                                ],
                                "type": "object"
                            },
                            "Range": {
                                "description": "The range of attribute values being selected.",
                                "properties": {
                                    "EndMode": {
                                        "description": "The inclusive or exclusive range end.",
                                        "enum": [
                                            "FIRST",
                                            "LAST",
                                            "LAST_BEFORE_MISSING_VALUES",
                                            "INCLUSIVE",
                                            "EXCLUSIVE"
                                        ],
                                        "type": "string"
                                    },
                                    "EndValue": {
                                        "description": "The attribute value to terminate the range at.",
                                        "properties": {
                                            "BinaryValue": {
                                                "description": "A binary data value.",
                                                "type": "string"
                                            },
                                            "BooleanValue": {
                                                "description": "A Boolean data value.",
                                                "type": "boolean"
                                            },
                                            "DatetimeValue": {
                                                "description": "A date and time value.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "NumberValue": {
                                                "description": "A number data value.",
                                                "type": "string"
                                            },
                                            "StringValue": {
                                                "description": "A string data value.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "StartMode": {
                                        "description": "The inclusive or exclusive range start.",
                                        "enum": [
                                            "FIRST",
                                            "LAST",
                                            "LAST_BEFORE_MISSING_VALUES",
                                            "INCLUSIVE",
                                            "EXCLUSIVE"
                                        ],
                                        "type": "string"
                                    },
                                    "StartValue": {
                                        "description": "The value to start the range at.",
                                        "properties": {
                                            "BinaryValue": {
                                                "description": "A binary data value.",
                                                "type": "string"
                                            },
                                            "BooleanValue": {
                                                "description": "A Boolean data value.",
                                                "type": "boolean"
                                            },
                                            "DatetimeValue": {
                                                "description": "A date and time value.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "NumberValue": {
                                                "description": "A number data value.",
                                                "type": "string"
                                            },
                                            "StringValue": {
                                                "description": "A string data value.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "StartMode",
                                    "EndMode"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "IndexReference"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}