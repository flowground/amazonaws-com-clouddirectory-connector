{
    "title": "Amazon CloudDirectory",
    "description": "Amazon Cloud Directory Amazon Cloud Directory is a component of the AWS\nDirectory Service that simplifies the development and management of cloud-scale\nweb, mobile, and IoT applications. This guide describes the Cloud Directory\noperations that you can call programmatically and includes detailed information\non data types and errors. For information about Cloud Directory features, see \nAWS Directory Service [https://aws.amazon.com/directoryservice/] and the Amazon\nCloud Directory Developer Guide\n[https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html]\n.",
    "docsUrl": "https://aws.amazon.com/clouddirectory/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/clouddirectory/2017-01-11/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://clouddirectory.amazonaws.com/",
                    "http://clouddirectory.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "BatchRead": {
            "main": "./lib/actions/BatchRead.js",
            "title": "BatchRead",
            "description": "Performs all the read operations in a batch. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchRead.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchWrite": {
            "main": "./lib/actions/BatchWrite.js",
            "title": "BatchWrite",
            "description": "Performs all the write operations in a batch. Either all the operations succeed or none.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchWrite.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDirectory": {
            "main": "./lib/actions/DeleteDirectory.js",
            "title": "DeleteDirectory",
            "description": "Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDirectory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDirectory": {
            "main": "./lib/actions/CreateDirectory.js",
            "title": "CreateDirectory",
            "description": "Creates a Directory by copying the published schema into the directory. A\ndirectory cannot be created without a schema.\n\nYou can also quickly create a directory using a managed schema, called the \nQuickStartSchema. For more information, see Managed Schema\n[https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_managed.html] \nin the Amazon Cloud Directory Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDirectory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisableDirectory": {
            "main": "./lib/actions/DisableDirectory.js",
            "title": "DisableDirectory",
            "description": "Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisableDirectory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EnableDirectory": {
            "main": "./lib/actions/EnableDirectory.js",
            "title": "EnableDirectory",
            "description": "Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EnableDirectory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDirectory": {
            "main": "./lib/actions/GetDirectory.js",
            "title": "GetDirectory",
            "description": "Retrieves metadata about a directory.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDirectory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListDirectories": {
            "main": "./lib/actions/ListDirectories.js",
            "title": "ListDirectories",
            "description": "Lists directories created within an account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListDirectories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetFacet": {
            "main": "./lib/actions/GetFacet.js",
            "title": "GetFacet",
            "description": "Gets details of the <a>Facet</a>, such as facet name, attributes, <a>Rule</a>s, or <code>ObjectType</code>. You can call this on all kinds of schema facets -- published, development, or applied.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFacet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateFacet": {
            "main": "./lib/actions/UpdateFacet.js",
            "title": "UpdateFacet",
            "description": "Does the following:\n\n 1.  Adds new Attributes, Rules, or ObjectTypes.\n    \n    \n 2.  Updates existing Attributes, Rules, or ObjectTypes.\n    \n    \n 3.  Deletes existing Attributes, Rules, or ObjectTypes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateFacet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListFacetAttributes": {
            "main": "./lib/actions/ListFacetAttributes.js",
            "title": "ListFacetAttributes",
            "description": "Retrieves attributes attached to the facet.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListFacetAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateFacet": {
            "main": "./lib/actions/CreateFacet.js",
            "title": "CreateFacet",
            "description": "Creates a new <a>Facet</a> in a schema. Facet creation is allowed only in development or applied schemas.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateFacet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteFacet": {
            "main": "./lib/actions/DeleteFacet.js",
            "title": "DeleteFacet",
            "description": "Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s that are associated with the facet will be deleted. Only development schema facets are allowed deletion.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteFacet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListFacetNames": {
            "main": "./lib/actions/ListFacetNames.js",
            "title": "ListFacetNames",
            "description": "Retrieves the names of facets that exist in a schema.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListFacetNames.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateIndex": {
            "main": "./lib/actions/CreateIndex.js",
            "title": "CreateIndex",
            "description": "Creates an index object. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.html\">Indexing and search</a> for more information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateIndex.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttachToIndex": {
            "main": "./lib/actions/AttachToIndex.js",
            "title": "AttachToIndex",
            "description": "Attaches the specified object to the specified index.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttachToIndex.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DetachFromIndex": {
            "main": "./lib/actions/DetachFromIndex.js",
            "title": "DetachFromIndex",
            "description": "Detaches the specified object from the specified index.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DetachFromIndex.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListIndex": {
            "main": "./lib/actions/ListIndex.js",
            "title": "ListIndex",
            "description": "Lists objects attached to the specified index.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListIndex.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateObject": {
            "main": "./lib/actions/CreateObject.js",
            "title": "CreateObject",
            "description": "Creates an object in a <a>Directory</a>. Additionally attaches the object to a parent, if a parent reference and <code>LinkName</code> is specified. An object is simply a collection of <a>Facet</a> attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateObject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttachObject": {
            "main": "./lib/actions/AttachObject.js",
            "title": "AttachObject",
            "description": "Attaches an existing object to another object. An object can be accessed in two\nways:\n\n 1.  Using the path\n    \n    \n 2.  Using ObjectIdentifier",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttachObject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListObjectAttributes": {
            "main": "./lib/actions/ListObjectAttributes.js",
            "title": "ListObjectAttributes",
            "description": "Lists all attributes that are associated with an object. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListObjectAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetObjectAttributes": {
            "main": "./lib/actions/GetObjectAttributes.js",
            "title": "GetObjectAttributes",
            "description": "Retrieves attributes within a facet that are associated with an object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetObjectAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListObjectChildren": {
            "main": "./lib/actions/ListObjectChildren.js",
            "title": "ListObjectChildren",
            "description": "Returns a paginated list of child objects that are associated with a given object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListObjectChildren.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteObject": {
            "main": "./lib/actions/DeleteObject.js",
            "title": "DeleteObject",
            "description": "Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted. The maximum number of attributes that can be deleted during an object deletion is 30. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html\">Amazon Cloud Directory Limits</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteObject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DetachObject": {
            "main": "./lib/actions/DetachObject.js",
            "title": "DetachObject",
            "description": "Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DetachObject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AddFacetToObject": {
            "main": "./lib/actions/AddFacetToObject.js",
            "title": "AddFacetToObject",
            "description": "Adds a new <a>Facet</a> to an object. An object can have more than one facet applied on it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddFacetToObject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveFacetFromObject": {
            "main": "./lib/actions/RemoveFacetFromObject.js",
            "title": "RemoveFacetFromObject",
            "description": "Removes the specified facet from the specified object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveFacetFromObject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListAttachedIndices": {
            "main": "./lib/actions/ListAttachedIndices.js",
            "title": "ListAttachedIndices",
            "description": "Lists indices attached to the specified object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListAttachedIndices.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetObjectInformation": {
            "main": "./lib/actions/GetObjectInformation.js",
            "title": "GetObjectInformation",
            "description": "Retrieves metadata about an object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetObjectInformation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListObjectParents": {
            "main": "./lib/actions/ListObjectParents.js",
            "title": "ListObjectParents",
            "description": "Lists parent objects that are associated with a given object in pagination fashion.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListObjectParents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListObjectParentPaths": {
            "main": "./lib/actions/ListObjectParentPaths.js",
            "title": "ListObjectParentPaths",
            "description": "Retrieves all available parent paths for any object type such as node, leaf\nnode, policy node, and index node objects. For more information about objects,\nsee Directory Structure\n[https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html]\n.\n\nUse this API to evaluate all parents for an object. The call returns all objects\nfrom the root of the directory up to the requested object. The API returns the\nnumber of paths based on user-defined MaxResults, in case there are multiple\npaths to the parent. The order of the paths and nodes returned is consistent\namong multiple API calls unless the objects are deleted or moved. Paths not\nleading to the directory root are ignored from the target object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListObjectParentPaths.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListObjectPolicies": {
            "main": "./lib/actions/ListObjectPolicies.js",
            "title": "ListObjectPolicies",
            "description": "Returns policies attached to an object in pagination fashion.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListObjectPolicies.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateObjectAttributes": {
            "main": "./lib/actions/UpdateObjectAttributes.js",
            "title": "UpdateObjectAttributes",
            "description": "Updates a given object's attributes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateObjectAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttachPolicy": {
            "main": "./lib/actions/AttachPolicy.js",
            "title": "AttachPolicy",
            "description": "Attaches a policy object to a regular object. An object can have a limited number of attached policies.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttachPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListPolicyAttachments": {
            "main": "./lib/actions/ListPolicyAttachments.js",
            "title": "ListPolicyAttachments",
            "description": "Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListPolicyAttachments.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DetachPolicy": {
            "main": "./lib/actions/DetachPolicy.js",
            "title": "DetachPolicy",
            "description": "Detaches a policy from an object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DetachPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "LookupPolicy": {
            "main": "./lib/actions/LookupPolicy.js",
            "title": "LookupPolicy",
            "description": "Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don't have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don't lead to the root from the target object are ignored. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/LookupPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSchema": {
            "main": "./lib/actions/DeleteSchema.js",
            "title": "DeleteSchema",
            "description": "Deletes a given schema. Schemas in a development and published state can only be deleted. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSchema.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListAppliedSchemaArns": {
            "main": "./lib/actions/ListAppliedSchemaArns.js",
            "title": "ListAppliedSchemaArns",
            "description": "Lists schema major versions applied to a directory. If <code>SchemaArn</code> is provided, lists the minor version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListAppliedSchemaArns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ApplySchema": {
            "main": "./lib/actions/ApplySchema.js",
            "title": "ApplySchema",
            "description": "Copies the input published schema, at the specified version, into the <a>Directory</a> with the same name and version as that of the published schema.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ApplySchema.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateSchema": {
            "main": "./lib/actions/CreateSchema.js",
            "title": "CreateSchema",
            "description": "Creates a new schema in a development state. A schema can exist in three phases:\n\n *   Development: This is a mutable phase of the schema. All new schemas are in\n   the development phase. Once the schema is finalized, it can be published.\n   \n   \n *   Published: Published schemas are immutable and have a version associated\n   with them.\n   \n   \n *   Applied: Applied schemas are mutable in a way that allows you to add new\n   schema facets. You can also add new, nonrequired attributes to existing\n   schema facets. You can apply only published schemas to directories.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateSchema.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListDevelopmentSchemaArns": {
            "main": "./lib/actions/ListDevelopmentSchemaArns.js",
            "title": "ListDevelopmentSchemaArns",
            "description": "Retrieves each Amazon Resource Name (ARN) of schemas in the development state.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListDevelopmentSchemaArns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAppliedSchemaVersion": {
            "main": "./lib/actions/GetAppliedSchemaVersion.js",
            "title": "GetAppliedSchemaVersion",
            "description": "Returns current applied schema version ARN, including the minor version in use.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAppliedSchemaVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSchemaAsJson": {
            "main": "./lib/actions/GetSchemaAsJson.js",
            "title": "GetSchemaAsJson",
            "description": "Retrieves a JSON representation of the schema. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json\">JSON Schema Format</a> for more information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSchemaAsJson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutSchemaFromJson": {
            "main": "./lib/actions/PutSchemaFromJson.js",
            "title": "PutSchemaFromJson",
            "description": "Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json\">JSON Schema Format</a> for more information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutSchemaFromJson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListManagedSchemaArns": {
            "main": "./lib/actions/ListManagedSchemaArns.js",
            "title": "ListManagedSchemaArns",
            "description": "Lists the major version families of each managed schema. If a major version ARN is provided as SchemaArn, the minor version revisions in that family are listed instead.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListManagedSchemaArns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PublishSchema": {
            "main": "./lib/actions/PublishSchema.js",
            "title": "PublishSchema",
            "description": "Publishes a development schema with a major version and a recommended minor version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PublishSchema.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListPublishedSchemaArns": {
            "main": "./lib/actions/ListPublishedSchemaArns.js",
            "title": "ListPublishedSchemaArns",
            "description": "Lists the major version families of each published schema. If a major version ARN is provided as <code>SchemaArn</code>, the minor version revisions in that family are listed instead.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListPublishedSchemaArns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateSchema": {
            "main": "./lib/actions/UpdateSchema.js",
            "title": "UpdateSchema",
            "description": "Updates the schema name with a new name. Only development schema names can be updated.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateSchema.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpgradeAppliedSchema": {
            "main": "./lib/actions/UpgradeAppliedSchema.js",
            "title": "UpgradeAppliedSchema",
            "description": "Upgrades a single directory in-place using the <code>PublishedSchemaArn</code> with schema updates found in <code>MinorVersion</code>. Backwards-compatible minor version upgrades are instantaneously available for readers on all objects in the directory. Note: This is a synchronous API call and upgrades only one schema on a given directory per call. To upgrade multiple directories from one schema, you would need to call this API on each directory.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpgradeAppliedSchema.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpgradePublishedSchema": {
            "main": "./lib/actions/UpgradePublishedSchema.js",
            "title": "UpgradePublishedSchema",
            "description": "Upgrades a published schema under a new minor version revision using the current contents of <code>DevelopmentSchemaArn</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpgradePublishedSchema.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTagsForResource": {
            "main": "./lib/actions/ListTagsForResource.js",
            "title": "ListTagsForResource",
            "description": "Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTagsForResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TagResource": {
            "main": "./lib/actions/TagResource.js",
            "title": "TagResource",
            "description": "An API operation for adding tags to a resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TagResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UntagResource": {
            "main": "./lib/actions/UntagResource.js",
            "title": "UntagResource",
            "description": "An API operation for removing tags from a resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UntagResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AttachTypedLink": {
            "main": "./lib/actions/AttachTypedLink.js",
            "title": "AttachTypedLink",
            "description": "Attaches a typed link to a specified source and target object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AttachTypedLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetLinkAttributes": {
            "main": "./lib/actions/GetLinkAttributes.js",
            "title": "GetLinkAttributes",
            "description": "Retrieves attributes that are associated with a typed link.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetLinkAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateLinkAttributes": {
            "main": "./lib/actions/UpdateLinkAttributes.js",
            "title": "UpdateLinkAttributes",
            "description": "Updates a given typed link's attributes. Attributes to be updated must not contribute to the typed link's identity, as defined by its <code>IdentityAttributeOrder</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateLinkAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DetachTypedLink": {
            "main": "./lib/actions/DetachTypedLink.js",
            "title": "DetachTypedLink",
            "description": "Detaches a typed link from a specified source and target object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DetachTypedLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateTypedLinkFacet": {
            "main": "./lib/actions/UpdateTypedLinkFacet.js",
            "title": "UpdateTypedLinkFacet",
            "description": "Updates a <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateTypedLinkFacet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTypedLinkFacetAttributes": {
            "main": "./lib/actions/ListTypedLinkFacetAttributes.js",
            "title": "ListTypedLinkFacetAttributes",
            "description": "Returns a paginated list of all attribute definitions for a particular <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTypedLinkFacetAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateTypedLinkFacet": {
            "main": "./lib/actions/CreateTypedLinkFacet.js",
            "title": "CreateTypedLinkFacet",
            "description": "Creates a <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateTypedLinkFacet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteTypedLinkFacet": {
            "main": "./lib/actions/DeleteTypedLinkFacet.js",
            "title": "DeleteTypedLinkFacet",
            "description": "Deletes a <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTypedLinkFacet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTypedLinkFacetInformation": {
            "main": "./lib/actions/GetTypedLinkFacetInformation.js",
            "title": "GetTypedLinkFacetInformation",
            "description": "Returns the identity attribute order for a specific <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTypedLinkFacetInformation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTypedLinkFacetNames": {
            "main": "./lib/actions/ListTypedLinkFacetNames.js",
            "title": "ListTypedLinkFacetNames",
            "description": "Returns a paginated list of <code>TypedLink</code> facet names for a particular schema. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTypedLinkFacetNames.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListIncomingTypedLinks": {
            "main": "./lib/actions/ListIncomingTypedLinks.js",
            "title": "ListIncomingTypedLinks",
            "description": "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListIncomingTypedLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListOutgoingTypedLinks": {
            "main": "./lib/actions/ListOutgoingTypedLinks.js",
            "title": "ListOutgoingTypedLinks",
            "description": "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListOutgoingTypedLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}